{"version":3,"sources":["components/Calculator.js","components/Display.js","components/Buttons.js","containers/App.js","serviceWorker.js","index.js","services/constants.js","services/reducers.js","services/actions.js"],"names":["Calculator","props","react_default","a","createElement","className","children","Display","_ref","combinedInputs","calculatedValue","displayLower","toString","id","Buttons","changeDisplayUpper","updateCurrentValue","combineInputs","logInputs","allClear","logPlus","logEquals","onClick","App","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","components_Calculator","components_Display","components_Buttons","Component","connect","state","currentValue","previousValue","currentOperator","dispatch","value","changeFirstValueToNonZeroNumber","clearCombinedInputs","Boolean","window","location","hostname","match","__webpack_require__","d","__webpack_exports__","store","logger","createLogger","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","CURRENT_VALUE","COMBINE_INPUTS","CALCULATED_VALUE","CLEAR_COMBINED_INPUTS","UPDATE_PREVIOUS_VALUE_2_LENGTH","UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH","CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER","FIRST_NON_ZERO_VALIDATION_TRUE","POP_VALUE_COMBINED_INPUTS","DECIMAL_EXISTS_TRUE","DECIMAL_EXISTS_FALSE","UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS","initialState","firstNonZeroValidation","decimalExists","arguments","length","undefined","action","type","C_Users_hibbe_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","payload","changeFirstValueToNonZeroNumberPayload","currentValuePayload","newArray","slice","push","combinedInputsPayload","currentOperatorPayload","calculatedValuePayload","firstNonZeroValidationFalsePayload","previousValuePayload","decimalExistsFalsePayload","calculateValue","allValues","string","join","calculate","eval","firstNonZeroValidationTruePayload","newValues","pop","decimalExistsTruePayload","updateCombinedInputsToLogEqualsPayload","_constants_js__WEBPACK_IMPORTED_MODULE_0__","_index_js__WEBPACK_IMPORTED_MODULE_1__","console","log","popValueCombinedInputs","decimalExistsFalse","decimalExistsTrue","getState","concat"],"mappings":"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","file":"static/js/main.73e0f0fa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Calculator = (props) => {\r\n    return (\r\n        <div\r\n            className=\"\r\n            w-90 h-auto flex flex-column bg-gray br1 ba bw3 b--silver\r\n            w-50-m\r\n            w-50-l \r\n            \"\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\n\r\nconst Display = ({ combinedInputs, calculatedValue, displayLower }) => {\r\n    const stringValue = calculatedValue;\r\n    stringValue.toString();\r\n\r\n    return (\r\n        <div\r\n            className=\"pointer bg-blue\"\r\n        >\r\n            <div \r\n                id=\"display\"\r\n                className=\"\r\n                h2 flex justify-end white\r\n                h2-ns\r\n                h3-m\r\n                h3-l\r\n                \"\r\n            >{combinedInputs}</div>\r\n            <div \r\n                className=\"\r\n                h2 flex justify-end white\r\n                h2-ns\r\n                h3-m\r\n                h3-l\r\n                \"\r\n            >{displayLower}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport './buttons.css';\r\nimport { store } from '../index.js';\r\n//import { CHANGE_DISPLAY_UPPER } from '../services/constants.js';\r\n//import { updateCurrentValue } from '../services/actions';\r\nconst Buttons = ({changeDisplayUpper, updateCurrentValue, combineInputs, logInputs, logPlus, allClear,\r\nlogEquals,\r\n}) => {\r\n    return (\r\n        <div\r\n            className=\"container ba bw1\"\r\n        >\r\n            <div \r\n                id=\"clear\"\r\n                className=\"w-100 h-100 flex column1-3 justify-center items-center bg-light-red ba pointer dim\"\r\n                onClick={() => allClear(0)}\r\n            >\r\n            ac\r\n            </div>\r\n            <div \r\n                id=\"divide\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-green ba pointer dim\"\r\n                onClick={() => logInputs(`/`)}\r\n            >\r\n            /\r\n            </div>\r\n            <div \r\n                id=\"multiply\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-green ba pointer dim\"\r\n                onClick={() => logInputs(`*`)}\r\n            >\r\n            x\r\n            </div>\r\n            <div \r\n                id=\"seven\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\" \r\n                onClick={() => logInputs(7)}\r\n            >\r\n            7\r\n            </div>\r\n            <div \r\n                id=\"eight\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(8)}\r\n            >\r\n            8\r\n            </div>\r\n            <div \r\n                id=\"nine\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(9)}\r\n            >\r\n            9\r\n            </div>\r\n            <div \r\n                id=\"subtract\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-green ba pointer dim\"\r\n                onClick={() => logInputs(`-`)}\r\n            >\r\n            -\r\n            </div>\r\n            <div \r\n                id=\"four\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(4)}\r\n            >\r\n            4\r\n            </div>\r\n            <div \r\n                id=\"five\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(5)}\r\n            >\r\n            5\r\n            </div>\r\n            <div \r\n                id=\"six\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(6)}\r\n            >\r\n            6\r\n            </div>\r\n            <div \r\n                id=\"add\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-green ba pointer dim\"\r\n                onClick={() => logInputs(\"+\")}\r\n            >\r\n            +\r\n            </div>\r\n            <div \r\n                id=\"one\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(1)}\r\n            >\r\n            1\r\n            </div>\r\n            <div \r\n                id=\"two\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(2)}\r\n            >\r\n            2\r\n            </div>\r\n            <div \r\n                id=\"three\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(3)}\r\n            >   \r\n            3\r\n            </div>\r\n            <div \r\n                id=\"zero\"\r\n                className=\"column1-3 w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(0)}\r\n            >\r\n            0\r\n            </div>\r\n            <div \r\n                id=\"decimal\"\r\n                className=\"w-100 h-100 flex justify-center items-center bg-blue ba pointer dim\"\r\n                onClick={() => logInputs(`.`)}\r\n            >\r\n            .\r\n            </div>\r\n            <div \r\n                id=\"equals\"\r\n                className=\"equals w-100 h-100 flex justify-center items-center bg-light-blue ba pointer dim\"\r\n                onClick={() => logEquals(`=`)}\r\n            >\r\n            =\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\nimport 'tachyons';\nimport Calculator from '../components/Calculator.js';\nimport Display from '../components/Display.js';\nimport Buttons from '../components/Buttons.js';\nimport { \n  updateCurrentValue,\n  combineInputs, \n  calculatedValue, \n  clearCombinedInputs,\n  changeFirstValueToNonZeroNumber,\n  logInputs,\n  logEquals,\n } from '../services/actions.js';\nimport { connect } from 'react-redux';\nimport { store } from '../index.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    displayLower: state.calculatedValue,\n    currentValue: state.currentValue,\n    previousValue: state.previousValue,\n    currentOperator: state.currentOperator,\n    combinedInputs: state.combinedInputs,\n    calculatedValue: state.calculatedValue,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateCurrentValue: (value) => dispatch(updateCurrentValue(value)),\n    combineInputs: (value) => dispatch(combineInputs(value)),\n    calculatedValue: (value) => dispatch(calculatedValue(value)),\n    changeFirstValueToNonZeroNumber: (value) => dispatch(changeFirstValueToNonZeroNumber(value)),\n    logEquals: (value) => { dispatch(logEquals(value))},\n    allClear: (value) => {\n      dispatch(clearCombinedInputs(value));\n    },\n    logInputs: (value) => { dispatch(logInputs(value));}\n    // logInputs: (value) => {\n    //  dispatch(updateCurrentValue(value));\n    //  dispatch(combineInputs(value));\n    // },\n    // logPlus: (value) => {\n    //   dispatch(updateCurrentValue(value));\n    //   dispatch(combineInputs(value));\n    //   console.log(store.getState());\n    // },\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //this.props = 1;\n    // this.state= {\n    //   value: 1,\n    // }\n  }\n\n  render() {\n  return (\n    <div className=\"min-vh-100 bg-light-green flex flex-column items-center pt5\">\n      <Calculator>\n        <Display \n          displayLower={this.props.displayLower}\n          combinedInputs={this.props.combinedInputs}\n          calculatedValue={this.props.calculatedValue}\n        />\n        <Buttons \n           updateCurrentValue={this.props.updateCurrentValue}\n           logInputs={this.props.logInputs}\n           logPlus={this.props.logPlus}\n           logEquals={this.props.logEquals}\n           allClear={this.props.allClear}\n        />\n      </Calculator>\n    </div>\n  );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './services/reducers.js';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nconst logger = createLogger();\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nexport const CURRENT_VALUE = \"CURRENT_VALUE\";\r\nexport const COMBINE_INPUTS = 'COMBINE_INPUTS';\r\nexport const CALCULATED_VALUE = \"CALCULATED_VALUE\";\r\nexport const CLEAR_COMBINED_INPUTS = \"CLEAR_COMBINED_INPUTS\";\r\nexport const UPDATE_PREVIOUS_VALUE_2_LENGTH = \"UPDATE_PREVIOUS_VALUE_2_LENGTH\";\r\nexport const UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH = \"UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH\";\r\nexport const CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER = \"CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER\";\r\nexport const FIRST_NON_ZERO_VALIDATION_TRUE = \"FIRST_NON_ZERO_VALIDATION_TRUE\";\r\nexport const POP_VALUE_COMBINED_INPUTS = \"POP_VALUE_COMBINED_INPUTS\";\r\nexport const DECIMAL_EXISTS_TRUE = \"DECIMAL_EXISTS_TRUE\";\r\nexport const DECIMAL_EXISTS_FALSE = \"DECIMAL_EXISTS_FALSE\";\r\nexport const UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS = \"UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS\";","import {\r\n    CURRENT_VALUE, COMBINE_INPUTS, \r\n    CALCULATED_VALUE,\r\n    CLEAR_COMBINED_INPUTS,\r\n    UPDATE_PREVIOUS_VALUE_2_LENGTH,\r\n    UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH,\r\n    CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER,\r\n    FIRST_NON_ZERO_VALIDATION_TRUE,\r\n    POP_VALUE_COMBINED_INPUTS,\r\n    DECIMAL_EXISTS_FALSE,\r\n    DECIMAL_EXISTS_TRUE,\r\n    UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS,\r\n} from \"./constants.js\";\r\nimport { updateCombinedInputsToLogEquals } from \"./actions.js\";\r\n\r\n\r\nconst initialState = {\r\n    //displayUpper: null,\r\n    displayLower: null,\r\n    currentValue: 0,\r\n    previousValue: null,\r\n    currentOperator: null,\r\n    combinedInputs: [0],\r\n    calculatedValue: null,\r\n    firstNonZeroValidation: false,\r\n    decimalExists: false,\r\n}\r\n\r\nexport const rootReducer = (state=initialState, action={}) => {\r\n    if(action.type === CURRENT_VALUE ) {\r\n        return {...state, currentValue: action.payload }\r\n    } \r\n    if(action.type === UPDATE_PREVIOUS_VALUE_2_LENGTH) {\r\n        return{...state, previousValue: action.payload }\r\n    }\r\n    if(action.type === UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH) {\r\n        return{...state, previousValue: action.payload }\r\n    }\r\n    if(action.type === CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER) {\r\n        return {\r\n            ...state,\r\n            combinedInputs: action.changeFirstValueToNonZeroNumberPayload,\r\n            currentValue: action.currentValuePayload,\r\n        };\r\n    }\r\n    if(action.type === COMBINE_INPUTS ) {\r\n        return {...state, combinedInputs:  function newInputs() {\r\n            const newArray = state.combinedInputs.slice();\r\n            newArray.push(action.payload);\r\n            return newArray;\r\n            }()\r\n        }\r\n    } \r\n    if(action.type === CLEAR_COMBINED_INPUTS ) {\r\n        return{...state,\r\n            combinedInputs: action.combinedInputsPayload,\r\n            currentOperator: action.currentOperatorPayload,\r\n            displayLower: action.payload,\r\n            calculatedValue: action.calculatedValuePayload,\r\n            currentValue: action.payload,\r\n            firstNonZeroValidation: action.firstNonZeroValidationFalsePayload,\r\n            previousValue: action.previousValuePayload,\r\n            decimalExists: action.decimalExistsFalsePayload,\r\n        }\r\n    }\r\n    if(action.type === CALCULATED_VALUE ) {\r\n        return {...state, calculatedValue: function calculateValue() {\r\n            const allValues = state.combinedInputs.slice();\r\n            const string = allValues.join(\"\");\r\n            const calculate = eval(string);\r\n            return calculate;\r\n            }()\r\n        }\r\n    }\r\n    if(action.type === FIRST_NON_ZERO_VALIDATION_TRUE) {\r\n        return{...state, firstNonZeroValidation: action.firstNonZeroValidationTruePayload }\r\n    }\r\n    if(action.type === POP_VALUE_COMBINED_INPUTS) {\r\n        return{...state, combinedInputs: function popValue() {\r\n            const allValues = state.combinedInputs.slice();\r\n            const newValues = allValues.slice();\r\n            newValues.pop();\r\n            return newValues;\r\n            }()\r\n        }\r\n    }\r\n    if(action.type === DECIMAL_EXISTS_FALSE ) {\r\n        return {...state, decimalExists: action.decimalExistsFalsePayload }\r\n    }\r\n    if(action.type === DECIMAL_EXISTS_TRUE ) {\r\n        return {...state, decimalExists: action.decimalExistsTruePayload }\r\n    }\r\n    if(action.type === UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS) {\r\n        return {...state, \r\n            combinedInputs: action.updateCombinedInputsToLogEqualsPayload,\r\n            previousValue: action.previousValuePayload,\r\n        \r\n        }\r\n    }\r\n        return state;\r\n}","import  { \r\n    CURRENT_VALUE, \r\n    COMBINE_INPUTS, \r\n    CALCULATED_VALUE, \r\n    CLEAR_COMBINED_INPUTS,\r\n    UPDATE_PREVIOUS_VALUE_2_LENGTH,\r\n    UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH, \r\n    CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER,\r\n    FIRST_NON_ZERO_VALIDATION_TRUE,\r\n    POP_VALUE_COMBINED_INPUTS,\r\n    DECIMAL_EXISTS_FALSE,\r\n    DECIMAL_EXISTS_TRUE,\r\n    UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS,\r\n} from './constants.js';\r\nimport {store} from '../index.js';\r\nimport 'redux';\r\n\r\n\r\nexport const updateCurrentValue = (value) => {\r\n    console.log(value);\r\n    return {\r\n        type: CURRENT_VALUE,\r\n        payload: value,\r\n    };\r\n}\r\n\r\nexport const updatePreviousValue2Length = () => {\r\n    return {\r\n    type: UPDATE_PREVIOUS_VALUE_2_LENGTH,\r\n    payload: store.getState().combinedInputs[store.getState().combinedInputs.length -  1 ],\r\n    };\r\n}\r\n\r\nexport const updatePreviousValueGreaterThan2Length = () => {\r\n    return {\r\n    type: UPDATE_PREVIOUS_VALUE_GREATER_THAN_2_LENGTH,\r\n    payload: store.getState().combinedInputs[store.getState().combinedInputs.length - 1 ],\r\n    };\r\n}\r\n\r\nexport const changeFirstValueToNonZeroNumber = (value) => {\r\n    return {\r\n        type: CHANGE_FIRST_VALUE_TO_NON_ZERO_NUMBER,\r\n        changeFirstValueToNonZeroNumberPayload: [value],\r\n        currentValuePayload: value,\r\n    };\r\n}\r\n\r\nexport const combineInputs = (value) => {\r\n    console.log(value);\r\n   return ({type: COMBINE_INPUTS, payload: value });\r\n}\r\n\r\nexport const calculatedValue = (value) => {\r\n    return {\r\n        type: CALCULATED_VALUE, \r\n        payload: value,\r\n    };\r\n}\r\n\r\nexport const clearCombinedInputs = (value) => {\r\n    return {\r\n        type: CLEAR_COMBINED_INPUTS, \r\n        combinedInputsPayload: [0],\r\n        currentOperatorPayload: null,\r\n        payload: value,\r\n        firstNonZeroValidationFalsePayload: false,\r\n        calculatedValuePayload: null,\r\n        previousValuePayload: null,\r\n        decimalExistsFalsePayload: false,\r\n    };\r\n}\r\n\r\nexport const firstNonZeroValidationTrue = () => {\r\n    return {\r\n        type: FIRST_NON_ZERO_VALIDATION_TRUE,\r\n        firstNonZeroValidationTruePayload: true,\r\n    }\r\n}\r\n\r\nexport const popValueCombinedInputs = () => {\r\n    return {\r\n        type: POP_VALUE_COMBINED_INPUTS,\r\n    }\r\n}\r\n\r\nexport const decimalExistsFalse = () => {\r\n    return {\r\n        type: DECIMAL_EXISTS_FALSE,\r\n        decimalExistsFalsePayload: false,\r\n    }\r\n}\r\n\r\nexport const decimalExistsTrue = () => {\r\n    return {\r\n        type: DECIMAL_EXISTS_TRUE,\r\n        decimalExistsTruePayload: true,\r\n    }\r\n}\r\n\r\nexport const updateCombinedInputsToLogEquals = () => {\r\n    return {\r\n    type: UPDATE_COMBINED_INPUTS_TO_LOG_EQUALS,\r\n    updateCombinedInputsToLogEqualsPayload: [store.getState().calculatedValue],\r\n    previousValuePayload: null,\r\n    }\r\n}\r\n\r\nexport const logEquals = (value) => {\r\n    return (dispatch) => {\r\n        if(\r\n            store.getState().combinedInputs[store.getState().combinedInputs.length - 1 ] === `+` \r\n            || store.getState().combinedInputs[store.getState().combinedInputs.length - 1 ] === `-`\r\n            || store.getState().combinedInputs[store.getState().combinedInputs.length - 1 ] === `*`\r\n            || store.getState().combinedInputs[store.getState().combinedInputs.length - 1 ] === `/`\r\n         ) {\r\n             dispatch(popValueCombinedInputs());\r\n         }\r\n         console.log(\"should have popped the operator for equals if there was one\")\r\n      dispatch(updateCurrentValue(value));\r\n      dispatch(calculatedValue(value));\r\n      dispatch(updateCombinedInputsToLogEquals());\r\n      console.log(typeof(store.getState().calculatedValue));\r\n    }\r\n}\r\n\r\nexport const logInputs = (value) => {\r\n    return (dispatch, getState ) => {\r\n        console.log(store.getState().combinedInputs[0]);\r\n        console.log(`this is the ${value} in logInputs`);\r\n        if(store.getState().combinedInputs.length == 2 ) {\r\n            console.log(\"if statement for previous value\")\r\n            dispatch(updatePreviousValue2Length(value));\r\n           }\r\n        if(store.getState().combinedInputs.length > 2 ) {\r\n            dispatch(updatePreviousValueGreaterThan2Length(value));\r\n        }\r\n        if(store.getState().combinedInputs[0] === 0 && value !== 0 && value !== \"+\" && value !== \"-\" && value !== \"*\" && value !== \"/\") {\r\n            console.log(\"zero checker and nonzero validation and changeFVTNZ\");\r\n            if(value === `.`) {\r\n                dispatch(decimalExistsTrue());\r\n            }\r\n            dispatch(updateCurrentValue(value));\r\n            dispatch(changeFirstValueToNonZeroNumber(value));\r\n            dispatch(firstNonZeroValidationTrue());\r\n        }\r\n        else if(store.getState().firstNonZeroValidation === true) {\r\n            if(store.getState().previousValue === `.` && value === `.` || \r\n            store.getState().combinedInputs[0] === `.` && store.getState().combinedInputs.length === 1 && value === `.`\r\n            || store.getState().decimalExists === true && value === `.`\r\n            ) {\r\n                console.log(\"should do nothing for double decimal\")\r\n            } else {\r\n                if(\r\n                    store.getState().previousValue === `+` && value === `+` || \r\n                    store.getState().previousValue === `+` && value === `-` ||\r\n                    store.getState().previousValue === `+` && value === `*` ||\r\n                    store.getState().previousValue === `+` && value === `/` ||\r\n                    store.getState().previousValue === `-` && value === `+` || \r\n                    store.getState().previousValue === `-` && value === `-` ||\r\n                    store.getState().previousValue === `-` && value === `*` ||\r\n                    store.getState().previousValue === `-` && value === `/` ||\r\n                    store.getState().previousValue === `*` && value === `+` || \r\n                    store.getState().previousValue === `*` && value === `-` ||\r\n                    store.getState().previousValue === `*` && value === `*` ||\r\n                    store.getState().previousValue === `*` && value === `/` ||\r\n                    store.getState().previousValue === `/` && value === `+` || \r\n                    store.getState().previousValue === `/` && value === `-` ||\r\n                    store.getState().previousValue === `/` && value === `*` ||\r\n                    store.getState().previousValue === `/` && value === `/` \r\n                ) {\r\n                    if(value === `+` || value === `-` || value === `*` || value === `/`) {\r\n                        dispatch(decimalExistsFalse());\r\n                    }\r\n                    if(value === `.`) {\r\n                        dispatch(decimalExistsTrue());\r\n                    }\r\n                    console.log(\"pop for operators\")\r\n                    dispatch(popValueCombinedInputs());\r\n                    //dispatch update current and combine inputs\r\n                    console.log(\"update and combine inputs for operators\")\r\n                    dispatch(updateCurrentValue(value));\r\n                    dispatch(combineInputs(value));\r\n                }   else {\r\n                    if(value === `+` || value === `-` || value === `*` || value === `/`) {\r\n                        dispatch(decimalExistsFalse());\r\n                    }\r\n                    if(value === `.`) {\r\n                        dispatch(decimalExistsTrue());\r\n                    }\r\n                        console.log(\"here should update and combine inputs normal\")\r\n                        dispatch(updateCurrentValue(value));\r\n                        dispatch(combineInputs(value));\r\n                    }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}